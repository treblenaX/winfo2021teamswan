[{"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\index.js":"1","C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\reportWebVitals.js":"2","C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\App.js":"3","C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\Homepage.tsx":"4","C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\ProjectPage.tsx":"5","C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\CreateProjectPage.tsx":"6"},{"size":1671,"mtime":1610834671275,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610784877217,"results":"9","hashOfConfig":"8"},{"size":553,"mtime":1610784877215,"results":"10","hashOfConfig":"8"},{"size":4160,"mtime":1610838141557,"results":"11","hashOfConfig":"8"},{"size":2755,"mtime":1610827427263,"results":"12","hashOfConfig":"8"},{"size":895,"mtime":1610828268516,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"xl4dmd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\index.js",["31","32"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CreateProjectPage from './CreateProjectPage';\r\nimport Homepage from './Homepage';\r\nimport './index.css';\r\n// import App from './App';\r\n// import Homepage from './Homepage';\r\nimport ProjectPage from './ProjectPage';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// demo object: timeline tile\r\nconst demo_timelineTile = \r\n  [\r\n    {\r\n      title: \"Timeline Tile Title 0\",\r\n      authorId: 12345,\r\n      dateTime: \"1.1.1\",\r\n      projectId: 12345,\r\n      content: \"Tile Content Tile Content Tile Content\",\r\n    },\r\n    {\r\n      title: \"Timeline Tile Title 1\",\r\n      authorId: 12345,\r\n      dateTime: \"1.1.1\",\r\n      projectId: 12345,\r\n      content: \"Tile Content Tile Content Tile Content\",\r\n    },\r\n    {\r\n      title: \"Timeline Tile Title 2\",\r\n      authorId: 12345,\r\n      dateTime: \"1.1.1\",\r\n      projectId: 12345,\r\n      content: \"Tile Content Tile Content Tile Content\",\r\n    },\r\n  ];\r\n\r\n// demo entrypoint: Homepage\r\nfunction demoHomePage() {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Homepage {...demo_timelineTile} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\n\r\n\r\n// production entrypoint\r\nfunction start() {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <CreateProjectPage />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\n// start program\r\n// start();\r\ndemoHomePage();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["33","34"],"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\reportWebVitals.js",[],"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\App.js",[],"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\Homepage.tsx",[],["35","36"],"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\ProjectPage.tsx",["37","38"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Project } from './api/Project';\r\nimport { TimelineTile } from './api/TimelineTile';\r\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@material-ui/core';\r\n\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    summary: {\r\n        display: 'flex',\r\n    },\r\n\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n\r\n    media: {\r\n        flex: '1 0 auto',\r\n        width: 300,\r\n        height: 300,\r\n    },\r\n}));\r\n\r\n// displays the project summary\r\nfunction ProjectSummary(project: Project) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.summary}>\r\n            <CardMedia \r\n                className={classes.media}\r\n                image=\"https://cdn.discordapp.com/attachments/796478136866963477/799822623168921610/unknown.png\"\r\n            />\r\n            <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h6\">Project Title</Typography>\r\n                    <Typography variant=\"body1\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. </Typography>\r\n                </CardContent>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction ProjectTimeline(items: TimelineTile[]) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            {[0,1,2].map((value) => {\r\n                return (\r\n                    <Grid key={value} item>\r\n                        <Card className={classes.content}>\r\n                            <h1>Heading</h1>\r\n                            <p>Some body</p>\r\n                        </Card>\r\n                    </Grid>\r\n                );\r\n                \r\n            })}\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction TimelineCard(tile: TimelineTile) {\r\n    return <h1>Card</h1>;\r\n}\r\n\r\n// projectId: the ID of the project to create the page for\r\nfunction ProjectPage(project: Project) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <ProjectSummary {...project} />\r\n            <ProjectTimeline {...(project.timeline)} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectPage;",["39","40"],"C:\\GitHub\\winfo2021teamswan\\swan-client\\src\\CreateProjectPage.tsx",[],{"ruleId":"41","severity":1,"message":"42","line":8,"column":8,"nodeType":"43","messageId":"44","endLine":8,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":50,"column":10,"nodeType":"43","messageId":"44","endLine":50,"endColumn":15},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":69,"column":10,"nodeType":"43","messageId":"44","endLine":69,"endColumn":22},{"ruleId":"50","severity":1,"message":"52","line":75,"column":11,"nodeType":"43","messageId":"44","endLine":75,"endColumn":18},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","replacedBy":"54"},"no-unused-vars","'ProjectPage' is defined but never used.","Identifier","unusedVar","'start' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'TimelineCard' is defined but never used.","'classes' is assigned a value but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]